{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport firebase from 'firebase';\nimport '@firebase/firestore';\nimport '@firebase/storage';\nimport { firebaseConfig } from \"../../Secrets\";\n\nvar DataModel = function DataModel() {\n  var _this = this;\n\n  _classCallCheck(this, DataModel);\n\n  this.asyncInit = function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _this.loadUsers();\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  };\n\n  this.loadUsers = function _callee2() {\n    var querySnap;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(_this.usersRef.get());\n\n          case 2:\n            querySnap = _context2.sent;\n            querySnap.forEach(function (qDocSnap) {\n              var key = qDocSnap.id;\n              var data = qDocSnap.data();\n              data.key = key;\n\n              _this.users.push(data);\n            });\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  };\n\n  this.getUsers = function () {\n    return _this.users;\n  };\n\n  this.createUser = function _callee3(email, pass, dispName) {\n    var newUser, newUserDocRef, key;\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            newUser = {\n              email: email,\n              password: pass,\n              displayName: dispName\n            };\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(_this.usersRef.add(newUser));\n\n          case 3:\n            newUserDocRef = _context3.sent;\n            key = newUserDocRef.id;\n            newUser.key = key;\n\n            _this.users.push(newUser);\n\n            return _context3.abrupt(\"return\", newUser);\n\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    });\n  };\n\n  if (firebase.apps.length === 0) {\n    firebase.initializeApp(firebaseConfig);\n  }\n\n  this.usersRef = firebase.firestore().collection('users');\n  this.storageRef = firebase.storage().ref();\n  this.users = [];\n  this.asyncInit();\n};\n\nvar theDataModel = undefined;\nexport function getDataModel() {\n  if (!theDataModel) {\n    theDataModel = new DataModel();\n  }\n\n  return theDataModel;\n}","map":{"version":3,"sources":["/Users/dushuyang/SI669/MyRecipes/recipes-app-react-native/src/data/dataModel.js"],"names":["firebase","firebaseConfig","DataModel","asyncInit","loadUsers","usersRef","get","querySnap","forEach","qDocSnap","key","id","data","users","push","getUsers","createUser","email","pass","dispName","newUser","password","displayName","add","newUserDocRef","apps","length","initializeApp","firestore","collection","storageRef","storage","ref","theDataModel","undefined","getDataModel"],"mappings":";;AAAA,OAAOA,QAAP,MAAqB,UAArB;AACA,OAAO,qBAAP;AACA,OAAO,mBAAP;AACA,SAASC,cAAT;;IAEMC,S,GACF,qBAAc;AAAA;;AAAA;;AAAA,OAUdC,SAVc,GAUF;AAAA;AAAA;AAAA;AAAA;AACR,YAAA,KAAI,CAACC,SAAL;;AADQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAVE;;AAAA,OAcdA,SAdc,GAcF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACc,KAAI,CAACC,QAAL,CAAcC,GAAd,EADd;;AAAA;AACJC,YAAAA,SADI;AAERA,YAAAA,SAAS,CAACC,OAAV,CAAkB,UAAAC,QAAQ,EAAI;AAC5B,kBAAIC,GAAG,GAAGD,QAAQ,CAACE,EAAnB;AACA,kBAAIC,IAAI,GAAGH,QAAQ,CAACG,IAAT,EAAX;AACAA,cAAAA,IAAI,CAACF,GAAL,GAAWA,GAAX;;AACA,cAAA,KAAI,CAACG,KAAL,CAAWC,IAAX,CAAgBF,IAAhB;AACD,aALD;;AAFQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAdE;;AAAA,OAwBdG,QAxBc,GAwBH,YAAM;AACb,WAAO,KAAI,CAACF,KAAZ;AACH,GA1Ba;;AAAA,OA4BdG,UA5Bc,GA4BD,kBAAOC,KAAP,EAAcC,IAAd,EAAoBC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAELC,YAAAA,OAFK,GAEK;AACZH,cAAAA,KAAK,EAAEA,KADK;AAEZI,cAAAA,QAAQ,EAAEH,IAFE;AAGZI,cAAAA,WAAW,EAAEH;AAHD,aAFL;AAAA;AAAA,6CASiB,KAAI,CAACd,QAAL,CAAckB,GAAd,CAAkBH,OAAlB,CATjB;;AAAA;AASLI,YAAAA,aATK;AAYLd,YAAAA,GAZK,GAYCc,aAAa,CAACb,EAZf;AAaTS,YAAAA,OAAO,CAACV,GAAR,GAAcA,GAAd;;AACA,YAAA,KAAI,CAACG,KAAL,CAAWC,IAAX,CAAgBM,OAAhB;;AAdS,8CAeFA,OAfE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GA5BC;;AACV,MAAIpB,QAAQ,CAACyB,IAAT,CAAcC,MAAd,KAAyB,CAA7B,EAAgC;AAC5B1B,IAAAA,QAAQ,CAAC2B,aAAT,CAAuB1B,cAAvB;AACH;;AACD,OAAKI,QAAL,GAAgBL,QAAQ,CAAC4B,SAAT,GAAqBC,UAArB,CAAgC,OAAhC,CAAhB;AACA,OAAKC,UAAL,GAAkB9B,QAAQ,CAAC+B,OAAT,GAAmBC,GAAnB,EAAlB;AACA,OAAKnB,KAAL,GAAa,EAAb;AACA,OAAKV,SAAL;AACH,C;;AAuCL,IAAI8B,YAAY,GAAGC,SAAnB;AAEA,OAAO,SAASC,YAAT,GAAwB;AAC3B,MAAI,CAACF,YAAL,EAAmB;AACjBA,IAAAA,YAAY,GAAG,IAAI/B,SAAJ,EAAf;AACD;;AACD,SAAO+B,YAAP;AACH","sourcesContent":["import firebase from 'firebase';\nimport '@firebase/firestore';\nimport '@firebase/storage';\nimport { firebaseConfig } from '../../Secrets';\n\nclass DataModel {\n    constructor() {\n        if (firebase.apps.length === 0) { // aka !firebase.apps.length\n            firebase.initializeApp(firebaseConfig);\n        }\n        this.usersRef = firebase.firestore().collection('users');\n        this.storageRef = firebase.storage().ref();\n        this.users = [];\n        this.asyncInit();\n    }\n\n    asyncInit = async () => {\n        this.loadUsers();\n    }\n\n    loadUsers = async () => {\n        let querySnap = await this.usersRef.get();\n        querySnap.forEach(qDocSnap => {\n          let key = qDocSnap.id;\n          let data = qDocSnap.data();\n          data.key = key;\n          this.users.push(data);\n        });\n    }\n\n    getUsers = () => {\n        return this.users;\n    }\n\n    createUser = async (email, pass, dispName) => {\n        // assemble the data structure\n        let newUser = {\n          email: email,\n          password: pass,\n          displayName: dispName\n        }\n    \n        // add the data to Firebase (user collection)\n        let newUserDocRef = await this.usersRef.add(newUser);\n    \n        // get the new Firebase ID and save it as the local \"key\"\n        let key = newUserDocRef.id;\n        newUser.key = key;\n        this.users.push(newUser);\n        return newUser;\n    }\n}\n\nlet theDataModel = undefined;\n\nexport function getDataModel() {\n    if (!theDataModel) {\n      theDataModel = new DataModel();\n    }\n    return theDataModel;\n}"]},"metadata":{},"sourceType":"module"}