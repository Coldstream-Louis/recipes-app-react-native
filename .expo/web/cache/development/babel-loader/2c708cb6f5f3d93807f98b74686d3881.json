{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/dushuyang/SI669/MyRecipes/recipes-app-react-native/src/screens/SignUp/SignUpScreen.js\";\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport styles from \"./styles\";\nimport { getDataModel } from \"../../data/dataModel\";\n\nvar SignUpScreen = function (_React$Component) {\n  _inherits(SignUpScreen, _React$Component);\n\n  function SignUpScreen(props) {\n    var _this;\n\n    _classCallCheck(this, SignUpScreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SignUpScreen).call(this, props));\n\n    _this.onCreateAccount = function _callee() {\n      var users, _iterator, _isArray, _i, _ref, _user, newUser;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(_this.state.password != _this.state.confirmPassword)) {\n                _context.next = 3;\n                break;\n              }\n\n              Alert.alert('Password could not be confirmed', 'Please check your input', [{\n                text: 'OK',\n                style: 'OK'\n              }]);\n              return _context.abrupt(\"return\");\n\n            case 3:\n              if (!(_this.state.password.length < 6)) {\n                _context.next = 6;\n                break;\n              }\n\n              Alert.alert('Invalid Password', 'Password should include at least 4 characters', [{\n                text: 'OK',\n                style: 'OK'\n              }]);\n              return _context.abrupt(\"return\");\n\n            case 6:\n              users = _this.dataModel.getUsers();\n              _iterator = users, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === \"function\" ? typeof Symbol === \"function\" ? typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\" : \"@@iterator\" : \"@@iterator\"]();\n\n            case 8:\n              if (!_isArray) {\n                _context.next = 14;\n                break;\n              }\n\n              if (!(_i >= _iterator.length)) {\n                _context.next = 11;\n                break;\n              }\n\n              return _context.abrupt(\"break\", 25);\n\n            case 11:\n              _ref = _iterator[_i++];\n              _context.next = 18;\n              break;\n\n            case 14:\n              _i = _iterator.next();\n\n              if (!_i.done) {\n                _context.next = 17;\n                break;\n              }\n\n              return _context.abrupt(\"break\", 25);\n\n            case 17:\n              _ref = _i.value;\n\n            case 18:\n              _user = _ref;\n\n              if (!(_user.email === _this.state.email)) {\n                _context.next = 23;\n                break;\n              }\n\n              console.log(\"found matching user\");\n              Alert.alert('Duplicate User', 'User ' + _this.state.emailInput + ' already exists.', [{\n                text: 'OK',\n                style: 'OK'\n              }]);\n              return _context.abrupt(\"return\");\n\n            case 23:\n              _context.next = 8;\n              break;\n\n            case 25:\n              console.log(\"no matching user found, creating\");\n              _context.next = 28;\n              return _regeneratorRuntime.awrap(_this.dataModel.createUser(_this.state.email, _this.state.password, _this.state.displayName));\n\n            case 28:\n              newUser = _context.sent;\n\n              _this.props.navigation.navigate('LogIn');\n\n            case 30:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    _this.dataModel = getDataModel();\n    _this.state = {\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      displayName: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(SignUpScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        }\n      }, React.createElement(Text, {\n        style: styles.logo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        }\n      }, \"Create Account\"), React.createElement(View, {\n        style: styles.inputView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputText,\n        placeholder: \"Enter your Email\",\n        placeholderTextColor: \"#003f5c\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            email: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        }\n      })), React.createElement(View, {\n        style: styles.inputView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        }\n      }, React.createElement(TextInput, {\n        secureTextEntry: true,\n        style: styles.inputText,\n        placeholder: \"Enter your Password\",\n        placeholderTextColor: \"#003f5c\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            password: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        }\n      })), React.createElement(View, {\n        style: styles.inputView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        }\n      }, React.createElement(TextInput, {\n        secureTextEntry: true,\n        style: styles.inputText,\n        placeholder: \"Confirm your Password\",\n        placeholderTextColor: \"#003f5c\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            confirmPassword: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        }\n      })), React.createElement(View, {\n        style: styles.inputView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputText,\n        placeholder: \"Enter your User Name\",\n        placeholderTextColor: \"#003f5c\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            displayName: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        }\n      })), React.createElement(TouchableOpacity, {\n        style: styles.loginBtn,\n        onPress: this.onCreateAccount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        }\n      }, React.createElement(Text, {\n        style: styles.loginText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        }\n      }, \"Register as New User\")), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this2.props.navigation.goBack();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        }\n      }, React.createElement(Text, {\n        style: styles.loginText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        }\n      }, \"Cancel\")));\n    }\n  }]);\n\n  return SignUpScreen;\n}(React.Component);\n\nexport { SignUpScreen as default };","map":{"version":3,"sources":["/Users/dushuyang/SI669/MyRecipes/recipes-app-react-native/src/screens/SignUp/SignUpScreen.js"],"names":["React","styles","getDataModel","SignUpScreen","props","onCreateAccount","state","password","confirmPassword","Alert","alert","text","style","length","users","dataModel","getUsers","user","email","console","log","emailInput","createUser","displayName","newUser","navigation","navigate","container","logo","inputView","inputText","setState","loginBtn","loginText","goBack","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Text, View, TextInput, TouchableOpacity, Alert } from 'react-native';\nimport styles from './styles';\nimport { getDataModel } from '../../data/dataModel';\n\nexport default class SignUpScreen extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.dataModel = getDataModel();\n    this.state = {\n      email:\"\",\n      password:\"\",\n      confirmPassword: \"\",\n      displayName: \"\"\n    };\n  }\n\n  onCreateAccount = async () => {\n    if(this.state.password != this.state.confirmPassword) {\n        Alert.alert(\n          'Password could not be confirmed',\n          'Please check your input',\n          [{ text: 'OK',style: 'OK'}]\n        );\n        return;\n    }\n    if(this.state.password.length < 6) {\n        Alert.alert(\n          'Invalid Password',\n          'Password should include at least 4 characters',\n          [{ text: 'OK',style: 'OK'}]\n        );\n        return;\n    }\n    \n    let users = this.dataModel.getUsers();\n    for (let user of users) {\n      if (user.email === this.state.email) {\n        console.log(\"found matching user\");\n        Alert.alert(\n          'Duplicate User',\n          'User ' + this.state.emailInput + ' already exists.',\n          [{ text: 'OK',style: 'OK'}]\n        );\n        return;\n      }\n    }\n    console.log(\"no matching user found, creating\");\n\n    let newUser = await this.dataModel.createUser(\n      this.state.email,\n      this.state.password,\n      this.state.displayName\n    );\n    this.props.navigation.navigate('LogIn');\n  }\n  render(){\n    return (\n      <View style={styles.container}>\n        <Text style={styles.logo}>Create Account</Text>\n        <View style={styles.inputView} >\n          <TextInput  \n            style={styles.inputText}\n            placeholder=\"Enter your Email\" \n            placeholderTextColor=\"#003f5c\"\n            onChangeText={text => this.setState({email:text})}/>\n        </View>\n        <View style={styles.inputView} >\n          <TextInput  \n            secureTextEntry\n            style={styles.inputText}\n            placeholder=\"Enter your Password\" \n            placeholderTextColor=\"#003f5c\"\n            onChangeText={text => this.setState({password:text})}/>\n        </View>\n        <View style={styles.inputView} >\n          <TextInput  \n            secureTextEntry\n            style={styles.inputText}\n            placeholder=\"Confirm your Password\" \n            placeholderTextColor=\"#003f5c\"\n            onChangeText={text => this.setState({confirmPassword:text})}/>\n        </View>\n        <View style={styles.inputView} >\n          <TextInput  \n            style={styles.inputText}\n            placeholder=\"Enter your User Name\" \n            placeholderTextColor=\"#003f5c\"\n            onChangeText={text => this.setState({displayName:text})}/>\n        </View>\n        <TouchableOpacity style={styles.loginBtn} onPress={this.onCreateAccount}>\n          <Text style={styles.loginText}>Register as New User</Text>\n        </TouchableOpacity>\n        <TouchableOpacity onPress={() => {\n          this.props.navigation.goBack();\n        }}>\n          <Text style={styles.loginText}>Cancel</Text>\n        </TouchableOpacity>\n\n      </View>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}