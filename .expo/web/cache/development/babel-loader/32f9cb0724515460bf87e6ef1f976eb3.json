{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/dushuyang/SI669/MyRecipes/recipes-app-react-native/src/screens/LogIn/LogInScreen.js\";\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport styles from \"./styles\";\nimport { getDataModel } from \"../../data/dataModel\";\n\nvar LogInScreen = function (_React$Component) {\n  _inherits(LogInScreen, _React$Component);\n\n  function LogInScreen(props) {\n    var _this;\n\n    _classCallCheck(this, LogInScreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LogInScreen).call(this, props));\n\n    _this.onLogIn = function () {\n      var users = _this.dataModel.getUsers();\n\n      for (var _iterator = users, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === \"function\" ? typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\" : \"@@iterator\"]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var _user = _ref;\n\n        if (_user.email === _this.state.email) {\n          if (_user.password === _this.state.password) {\n            _this.props.navigation.navigate('Home', {\n              user: _user\n            });\n\n            return;\n          }\n        }\n      }\n\n      Alert.alert('Login Failed', 'No match found for this email and password.', [{\n        text: 'OK',\n        style: 'OK'\n      }]);\n    };\n\n    _this.dataModel = getDataModel();\n    _this.state = {\n      email: \"\",\n      password: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(LogInScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        }\n      }, React.createElement(Text, {\n        style: styles.logo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        }\n      }, \"Let's Cook\"), React.createElement(View, {\n        style: styles.inputView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputText,\n        placeholder: \"Email...\",\n        placeholderTextColor: \"#003f5c\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            email: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        }\n      })), React.createElement(View, {\n        style: styles.inputView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        }\n      }, React.createElement(TextInput, {\n        secureTextEntry: true,\n        style: styles.inputText,\n        placeholder: \"Password...\",\n        placeholderTextColor: \"#003f5c\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            password: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        }\n      })), React.createElement(TouchableOpacity, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        }\n      }, React.createElement(Text, {\n        style: styles.forgot,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        }\n      }, \"Forgot Password?\")), React.createElement(TouchableOpacity, {\n        style: styles.loginBtn,\n        onPress: this.onLogIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        }\n      }, React.createElement(Text, {\n        style: styles.loginText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        }\n      }, \"LOGIN\")), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this2.props.navigation.navigate('SignUp');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        }\n      }, React.createElement(Text, {\n        style: styles.loginText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        }\n      }, \"Signup\")));\n    }\n  }]);\n\n  return LogInScreen;\n}(React.Component);\n\nexport { LogInScreen as default };","map":{"version":3,"sources":["/Users/dushuyang/SI669/MyRecipes/recipes-app-react-native/src/screens/LogIn/LogInScreen.js"],"names":["React","styles","getDataModel","LogInScreen","props","onLogIn","users","dataModel","getUsers","user","email","state","password","navigation","navigate","Alert","alert","text","style","container","logo","inputView","inputText","setState","forgot","loginBtn","loginText","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAEA,OAAOC,MAAP;AACA,SAASC,YAAT;;IAEqBC,W;;;AAEnB,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,qFAAMA,KAAN;;AADiB,UASnBC,OATmB,GAST,YAAM;AACd,UAAIC,KAAK,GAAG,MAAKC,SAAL,CAAeC,QAAf,EAAZ;;AACA,2BAAiBF,KAAjB,8MAAwB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,YAAfG,KAAe;;AACtB,YAAIA,KAAI,CAACC,KAAL,KAAe,MAAKC,KAAL,CAAWD,KAA9B,EAAqC;AACnC,cAAID,KAAI,CAACG,QAAL,KAAkB,MAAKD,KAAL,CAAWC,QAAjC,EAA2C;AAEzC,kBAAKR,KAAL,CAAWS,UAAX,CAAsBC,QAAtB,CAA+B,MAA/B,EAAuC;AAACL,cAAAA,IAAI,EAAJA;AAAD,aAAvC;;AACA;AACD;AACF;AACF;;AAEDM,MAAAA,KAAK,CAACC,KAAN,CACE,cADF,EAEE,6CAFF,EAGE,CAAC;AAAEC,QAAAA,IAAI,EAAE,IAAR;AAAaC,QAAAA,KAAK,EAAE;AAApB,OAAD,CAHF;AAKD,KA1BkB;;AAEjB,UAAKX,SAAL,GAAiBL,YAAY,EAA7B;AACA,UAAKS,KAAL,GAAa;AACXD,MAAAA,KAAK,EAAC,EADK;AAEXE,MAAAA,QAAQ,EAAC;AAFE,KAAb;AAHiB;AAOlB;;;;6BAoBO;AAAA;;AACN,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEX,MAAM,CAACkB,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAElB,MAAM,CAACmB,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEnB,MAAM,CAACoB,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,KAAK,EAAEpB,MAAM,CAACqB,SADhB;AAEE,QAAA,WAAW,EAAC,UAFd;AAGE,QAAA,oBAAoB,EAAC,SAHvB;AAIE,QAAA,YAAY,EAAE,sBAAAL,IAAI;AAAA,iBAAI,MAAI,CAACM,QAAL,CAAc;AAACb,YAAAA,KAAK,EAACO;AAAP,WAAd,CAAJ;AAAA,SAJpB;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFF,EASE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEhB,MAAM,CAACoB,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,eAAe,MADjB;AAEE,QAAA,KAAK,EAAEpB,MAAM,CAACqB,SAFhB;AAGE,QAAA,WAAW,EAAC,aAHd;AAIE,QAAA,oBAAoB,EAAC,SAJvB;AAKE,QAAA,YAAY,EAAE,sBAAAL,IAAI;AAAA,iBAAI,MAAI,CAACM,QAAL,CAAc;AAACX,YAAAA,QAAQ,EAACK;AAAV,WAAd,CAAJ;AAAA,SALpB;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CATF,EAiBE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEhB,MAAM,CAACuB,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,CAjBF,EAoBE,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAEvB,MAAM,CAACwB,QAAhC;AAA0C,QAAA,OAAO,EAAE,KAAKpB,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEJ,MAAM,CAACyB,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CApBF,EAuBE,oBAAC,gBAAD;AAAkB,QAAA,OAAO,EAAE,mBAAM;AAC/B,UAAA,MAAI,CAACtB,KAAL,CAAWS,UAAX,CAAsBC,QAAtB,CAA+B,QAA/B;AACD,SAFD;AAAA;AAAA;AAAA;AAAA;AAAA,SAGE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEb,MAAM,CAACyB,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,CAvBF,CADF;AAgCD;;;;EA9DsC1B,KAAK,CAAC2B,S;;SAA1BxB,W","sourcesContent":["import React from 'react';\nimport { Text, View, TextInput, TouchableOpacity, Alert } from 'react-native';\nimport styles from './styles';\nimport { getDataModel } from '../../data/dataModel';\n\nexport default class LogInScreen extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.dataModel = getDataModel();\n    this.state = {\n      email:\"\",\n      password:\"\"\n    };\n  }\n\n  onLogIn = () => {\n    let users = this.dataModel.getUsers();\n    for (let user of users) {\n      if (user.email === this.state.email) {\n        if (user.password === this.state.password) {\n          // success!\n          this.props.navigation.navigate('Home', {user});\n          return;\n        }\n      }\n    }\n\n    Alert.alert(\n      'Login Failed',\n      'No match found for this email and password.',\n      [{ text: 'OK',style: 'OK'}]\n    );\n  }\n  render(){\n    return (\n      <View style={styles.container}>\n        <Text style={styles.logo}>Let's Cook</Text>\n        <View style={styles.inputView} >\n          <TextInput  \n            style={styles.inputText}\n            placeholder=\"Email...\" \n            placeholderTextColor=\"#003f5c\"\n            onChangeText={text => this.setState({email:text})}/>\n        </View>\n        <View style={styles.inputView} >\n          <TextInput  \n            secureTextEntry\n            style={styles.inputText}\n            placeholder=\"Password...\" \n            placeholderTextColor=\"#003f5c\"\n            onChangeText={text => this.setState({password:text})}/>\n        </View>\n        <TouchableOpacity>\n          <Text style={styles.forgot}>Forgot Password?</Text>\n        </TouchableOpacity>\n        <TouchableOpacity style={styles.loginBtn} onPress={this.onLogIn}>\n          <Text style={styles.loginText}>LOGIN</Text>\n        </TouchableOpacity>\n        <TouchableOpacity onPress={() => {\n          this.props.navigation.navigate('SignUp');\n        }}>\n          <Text style={styles.loginText}>Signup</Text>\n        </TouchableOpacity>\n\n      </View>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}